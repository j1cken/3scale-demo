// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-03-27 14:13:04.34518005 +0200 CEST m=+0.046235945

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "title": "3scale-demo example API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "application-3scale-amp-demo.apps.46.4.143.210.xip.io",
    "schemes": [
        "http"
    ],   
    "paths": {
        "/ping": {
            "get": {
                "description": "get pong",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Pong back",
                "operationId": "ping",
                "parameters": [
                    {
                        "name": "user_key",
                        "in": "query",
                        "description": "Your API access key",
                        "required": true,
                        "x-data-threescale-name": "user_keys",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.HelloResponse"
                        }
                    }
                }
            }
        },
        "/postMessage": {
            "post": {
                "description": "Post a message and return it.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Post a message",
                "operationId": "postMessage",
                "parameters": [
                    {
                        "description": "message=My Message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.MessageResponse"
                        }
                    }
                }
            }
        },
        "/user/{name}": {
            "get": {
                "description": "greet user",
                "produces": [
                    "application/json"
                ],
                "summary": "Greet a user by name",
                "operationId": "user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of person",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.HelloResponse"
                        }
                    }
                }
            }
        },
        "/welcome": {
            "get": {
                "description": "Welcome guest unless given the name",
                "produces": [
                    "application/json"
                ],
                "summary": "Welcome someone",
                "operationId": "welcome",
                "parameters": [
                    {
                        "type": "string",
                        "description": "first name",
                        "name": "firstname",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "last name",
                        "name": "lastname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/api.UserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.HelloResponse": {
            "type": "object",
            "properties": {
                "hello": {
                    "type": "string"
                }
            }
        },
        "api.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "api.UserResponse": {
            "type": "object",
            "properties": {
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
